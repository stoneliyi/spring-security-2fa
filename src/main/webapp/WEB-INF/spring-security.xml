<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
 <!--
	<http auto-config="false" use-expressions="true" entry-point-ref="loginUrlAuthenticationEntryPoint">
 		<headers>
			<cache-control />
		</headers>
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/res/**" access="permitAll" />
		<intercept-url pattern="/js/**" access="permitAll" />	
		
		<access-denied-handler error-page="/403" />
		
		<logout logout-success-url="/login?logout"  delete-cookies="JSESSIONID"/>
			
		<custom-filter position="FORM_LOGIN_FILTER" ref="totpFormFilter" />
		
		<csrf/>
	</http>
-->

	<beans:bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
		<filter-chain-map path-type="ant">
			<filter-chain pattern="/**" filters="securityContextPersistenceFilter, totpFormFilter, exceptionTranslationFilter, filterSecurityInterceptor, logoutFilter" />
		</filter-chain-map>
	</beans:bean>
	
	<beans:bean id="securityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter"/>
	
	 <beans:bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <beans:property name="authenticationEntryPoint" ref="loginUrlAuthenticationEntryPoint"/>
        <beans:property name="accessDeniedHandler"  ref="accessDeniedHandler"/>
    </beans:bean>
    
    	 <beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
 		<beans:property name="loginFormUrl" value="/login" />
	 </beans:bean>
    
	<beans:bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
  		<beans:property name="errorPage" value="/403"/>
	</beans:bean>
    
    	<beans:bean id="authFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
 		<beans:property name="defaultFailureUrl" value="/login?error"/>
	</beans:bean>
	    
	<beans:bean id="TOTPWebAuthenticationDetailsSource" class="com.jasper.users.auth.TOTPWebAuthenticationDetailsSource">
	</beans:bean>
	
	<beans:bean id="totpFormFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationDetailsSource" ref="TOTPWebAuthenticationDetailsSource" />
		<beans:property name="authenticationFailureHandler" ref="authFailureHandler" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>
	
    <beans:bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter"/>
	
	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:property name="allowIfAllAbstainDecisions" value="false"/>
        <beans:property name="decisionVoters">
			<beans:list>
	            <beans:bean class="org.springframework.security.access.vote.RoleVoter"/>
	            <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
	            <beans:bean class="org.springframework.security.web.access.expression.WebExpressionVoter"/>
	    		</beans:list>
        </beans:property>
    </beans:bean>
	
	<beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
  		<beans:property name="authenticationManager" ref="authenticationManager"/>
  		<beans:property name="accessDecisionManager" ref="accessDecisionManager"/>
  		<beans:property name="securityMetadataSource">
    			<filter-security-metadata-source  request-matcher="ant" use-expressions="true">
      			<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')"/>
    			</filter-security-metadata-source>
  		</beans:property>
	</beans:bean>
	
	<beans:bean id="webInvocationPrivilegeEvaluator" class="org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator">
    		<beans:constructor-arg ref="filterSecurityInterceptor" />
	</beans:bean>
	
	<beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<beans:constructor-arg index="0" value="/login?logout" />
    		<beans:constructor-arg index="1">
        		<beans:list>
            		<beans:bean id="securityContextLogoutHandler" class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler">
            			<beans:property name="invalidateHttpSession" value="true"/>
            		</beans:bean>
        		</beans:list>
    		</beans:constructor-arg>
    		<beans:property name="filterProcessesUrl" value="/j_spring_security_logout" />
	</beans:bean>
    
	<!-- Select users and user_roles from database -->
	<authentication-manager>
	   <authentication-provider ref='authenticationProvider'>
	   </authentication-provider>
	 </authentication-manager>
	
	<beans:bean id="authenticationProvider" class="com.jasper.users.auth.TOTPAuthenticationProvider">
		<beans:property name="userDetailsService" ref="myUserDetailsService" />
	</beans:bean>
	
	<beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <beans:property name="providers">
            <beans:list>
                <beans:ref bean="authenticationProvider"/>
            </beans:list>
        </beans:property>
    </beans:bean>
	
</beans:beans>